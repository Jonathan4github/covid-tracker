{"version":3,"sources":["components/Chart/Chart.module.css","components/CountryPicker/CountryPicker.module.css","components/Cards/Cards.jsx","api/index.js","components/Chart/Chart.jsx","components/CountryPicker/CountryPicker.jsx","images/image.png","App.js","index.js","components/Cards/Cards.module.css","App.module.css"],"names":["module","exports","Cards","props","data","confirmed","recovered","deaths","lastUpdate","cardData","style","title","value","text","className","styles","container","Grid","spacing","justifyContent","map","item","component","Card","xs","md","card","CardContent","Typography","color","gutterBottom","variant","start","end","duration","seperator","Date","toDateString","url","fetchCovidTrackRecord","country","a","changeableUrl","axios","get","fetchDailyData","modifiedData","dailyData","total","date","reportDate","fetchCountries","countries","name","Chart","useState","setDailyData","useEffect","lineChart","length","labels","datasets","label","borderColor","fill","backgroundColor","barChart","options","legend","display","CountryPicker","handleCountryChange","setCountries","FormControl","formControl","NativeSelect","defaultValue","onChange","e","target","i","App","state","fetchedData","setState","this","src","coronaImage","alt","image","Component","ReactDom","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0dc3203.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Chart_container__30bjn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"CountryPicker_formControl__2QSX0\"};","import React from 'react';\r\nimport CountUp from 'react-countup';\r\nimport className from 'classnames';\r\nimport { Card, CardContent, Typography, Grid } from '@material-ui/core';\r\nimport styles from './Cards.module.css';\r\n\r\nconst Cards = (props) => {\r\n  const {data: {confirmed, recovered, deaths, lastUpdate} } = props;\r\n  const cardData = [\r\n    {\r\n      style: 'infected',\r\n      title: 'Infected',\r\n      value: confirmed && confirmed.value,\r\n      lastUpdate,\r\n      text: 'Number of active cases of COVID 19'\r\n    },\r\n    {\r\n      style: 'recovered',\r\n      title: 'Recovered',\r\n      value: recovered && recovered.value,\r\n      lastUpdate,\r\n      text: 'Number of recoveries from COVID 19'\r\n    },\r\n    {\r\n      style: 'deaths',\r\n      title: 'Deaths',\r\n      value: deaths && deaths.value,\r\n      lastUpdate,\r\n      text: 'Number of deaths caused by COVID 19'\r\n    }\r\n  ]\r\n\r\n  if (!confirmed) {\r\n    return <h1>Loading...</h1>\r\n  }\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      <Grid container spacing={3} justifyContent=\"center\">\r\n        {\r\n          cardData.map(({style, title, value, lastUpdate, text }) => (\r\n            <Grid item component={Card} xs={12} md={3} className={className(styles.card, styles[style])}>\r\n              <CardContent>\r\n                <Typography color=\"textSecondary\" gutterBottom>{title}</Typography>\r\n                <Typography variant=\"h5\">\r\n                  <CountUp start={0} end={value} duration={2.5} seperator=\",\" />\r\n                </Typography>\r\n                <Typography color=\"textSecondary\">{new Date(lastUpdate).toDateString()}</Typography>\r\n                <Typography variant=\"body2\">{text}</Typography>\r\n              </CardContent>\r\n            </Grid>\r\n          ))\r\n        }\r\n      </Grid>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Cards;\r\n","import axios from \"axios\";\r\n\r\nconst url = 'https://covid19.mathdro.id/api';\r\n\r\nexport const fetchCovidTrackRecord = async (country) => {\r\n  let changeableUrl = url;\r\n\r\n  if(country) {\r\n    changeableUrl = `${url}/countries/${country}`;\r\n  }\r\n\r\n  const { data: { confirmed, recovered, deaths, lastUpdate } } = await axios.get(changeableUrl);\r\n\r\n  return { confirmed, recovered, deaths, lastUpdate };\r\n}\r\n\r\nexport const fetchDailyData = async () => {\r\n  const { data } = await axios.get(`${url}/daily`);\r\n\r\n  const modifiedData = data.map((dailyData) => ({\r\n    confirmed: dailyData.confirmed.total,\r\n    deaths: dailyData.deaths.total,\r\n    date: dailyData.reportDate,\r\n  }));\r\n\r\n  return modifiedData;\r\n}\r\n\r\nexport const fetchCountries = async () => {\r\n  const {data: {countries}} = await axios.get(`${url}/countries`);\r\n\r\n  return countries.map(({ name })=> (name));\r\n}\r\n","import React, {useState, useEffect} from 'react';\r\nimport {Line, Bar} from 'react-chartjs-2';\r\nimport { fetchDailyData } from '../../api';\r\n\r\nimport styles from './Chart.module.css';\r\n\r\nconst Chart = ({data: { confirmed, recovered, deaths}, country}) => {\r\n  const [dailyData, setDailyData] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setDailyData(await fetchDailyData());\r\n    })()\r\n  }, []);\r\n\r\n  const lineChart = (\r\n    dailyData.length && <Line\r\n      data={{\r\n        labels: dailyData.map(({ date }) =>date ),\r\n        datasets: [{\r\n          data: dailyData.map(({ confirmed }) => confirmed ),\r\n          label: 'Infected',\r\n          borderColor: '#3333ff',\r\n          fill: true\r\n        }, {\r\n          data: dailyData.map(({ deaths }) => deaths ),\r\n          label: 'deaths',\r\n          borderColor: 'red',\r\n          backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n          fill: true\r\n        }]\r\n      }}\r\n    />\r\n  );\r\n\r\n  const barChart = (\r\n    confirmed && <Bar\r\n      data={{\r\n        labels: ['Infected', 'Recovered', 'Deaths'],\r\n        datasets: [{\r\n          label: 'People',\r\n          backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n          data: [confirmed.value, recovered.value, deaths.value]\r\n        }]\r\n      }}\r\n      options={{\r\n        legend:{display: false},\r\n        title:{display: true, text:`Current state in ${country}`}\r\n      }}\r\n    />\r\n  )\r\n\r\n\r\n  return (\r\n    <div className={styles.container}>\r\n      { country ? barChart : lineChart }\r\n\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default Chart;\r\n","import React, {useState, useEffect} from 'react';\r\nimport { NativeSelect, FormControl } from '@material-ui/core';\r\n\r\nimport styles from './CountryPicker.module.css';\r\n\r\nimport { fetchCountries } from '../../api';\r\n\r\nconst CountryPicker = ({ handleCountryChange }) => {\r\n  const [countries, setCountries] = useState([]);\r\n\r\n  useEffect(() => {\r\n    (async () => {\r\n      setCountries(await fetchCountries())\r\n    })()\r\n  }, []);\r\n\r\n  return (\r\n    <FormControl className={styles.formControl}>\r\n      <NativeSelect defaultValue='' onChange={(e) => handleCountryChange(e.target.value)}>\r\n        <option value=\"\">Global</option>\r\n        {countries.map((country, i)=>(\r\n          <option value={country} key={i}>{country}</option>\r\n        ))}\r\n      </NativeSelect>\r\n    </FormControl>\r\n  )\r\n}\r\n\r\nexport default CountryPicker;\r\n","export default __webpack_public_path__ + \"static/media/image.9e5d4fc7.png\";","import React, { Component } from 'react';\r\n\r\nimport { Cards, Chart, CountryPicker } from './components';\r\nimport styles from './App.module.css';\r\nimport { fetchCovidTrackRecord } from './api';\r\n\r\nimport coronaImage from './images/image.png';\r\n\r\nclass App extends Component {\r\n  state = {\r\n    data: {},\r\n    country: ''\r\n  }\r\n\r\n  async componentDidMount() {\r\n    const fetchedData = await fetchCovidTrackRecord();\r\n    this.setState({ data: fetchedData });\r\n  }\r\n\r\n  handleCountryChange = async (country) => {\r\n    const fetchedData = await fetchCovidTrackRecord(country);\r\n    this.setState({ data: fetchedData, country: country });\r\n  }\r\n\r\n  render() {\r\n    const { data, country } = this.state;\r\n    \r\n    return (\r\n      <div className={styles.container}>\r\n        <img src={coronaImage} alt=\"covid 19\" className={styles.image} />\r\n        <Cards data={data} />\r\n        <CountryPicker handleCountryChange={this.handleCountryChange} />\r\n        <Chart data={data} country={country} />\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDom from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\nReactDom.render(<App />, document.getElementById('root'));\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Cards_container__34oBT\",\"card\":\"Cards_card__15COh\",\"infected\":\"Cards_infected__1t1ZB\",\"recovered\":\"Cards_recovered__36_VS\",\"deaths\":\"Cards_deaths__2RLtI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"App_container__3wvg2\",\"image\":\"App_image__3v5BI\"};"],"sourceRoot":""}